{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StreamableFile = void 0;\nconst stream_1 = require(\"stream\");\nconst util_1 = require(\"util\");\nconst enums_1 = require(\"../enums\");\nconst shared_utils_1 = require(\"../utils/shared.utils\");\n/**\n * @see [Streaming files](https://docs.nestjs.com/techniques/streaming-files)\n *\n * @publicApi\n */\nclass StreamableFile {\n  constructor(bufferOrReadStream) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _a;\n    var _b;\n    this.options = options;\n    this.handleError = (err, res) => {\n      if (res.destroyed) {\n        return;\n      }\n      if (res.headersSent) {\n        res.end();\n        return;\n      }\n      res.statusCode = enums_1.HttpStatus.BAD_REQUEST;\n      res.send(err.message);\n    };\n    if (util_1.types.isUint8Array(bufferOrReadStream)) {\n      this.stream = new stream_1.Readable();\n      this.stream.push(bufferOrReadStream);\n      this.stream.push(null);\n      (_a = (_b = this.options).length) !== null && _a !== void 0 ? _a : _b.length = bufferOrReadStream.length;\n    } else if (bufferOrReadStream.pipe && (0, shared_utils_1.isFunction)(bufferOrReadStream.pipe)) {\n      this.stream = bufferOrReadStream;\n    }\n  }\n  getStream() {\n    return this.stream;\n  }\n  getHeaders() {\n    const {\n      type = 'application/octet-stream',\n      disposition = undefined,\n      length = undefined\n    } = this.options;\n    return {\n      type,\n      disposition,\n      length\n    };\n  }\n  get errorHandler() {\n    return this.handleError;\n  }\n  setErrorHandler(handler) {\n    this.handleError = handler;\n    return this;\n  }\n}\nexports.StreamableFile = StreamableFile;","map":{"version":3,"names":["Object","defineProperty","exports","value","StreamableFile","stream_1","require","util_1","enums_1","shared_utils_1","constructor","bufferOrReadStream","options","arguments","length","undefined","_a","_b","handleError","err","res","destroyed","headersSent","end","statusCode","HttpStatus","BAD_REQUEST","send","message","types","isUint8Array","stream","Readable","push","pipe","isFunction","getStream","getHeaders","type","disposition","errorHandler","setErrorHandler","handler"],"sources":["/home/benjamin/Documents/42/42_ft_transcendence/front/node_modules/@nestjs/common/file-stream/streamable-file.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StreamableFile = void 0;\nconst stream_1 = require(\"stream\");\nconst util_1 = require(\"util\");\nconst enums_1 = require(\"../enums\");\nconst shared_utils_1 = require(\"../utils/shared.utils\");\n/**\n * @see [Streaming files](https://docs.nestjs.com/techniques/streaming-files)\n *\n * @publicApi\n */\nclass StreamableFile {\n    constructor(bufferOrReadStream, options = {}) {\n        var _a;\n        var _b;\n        this.options = options;\n        this.handleError = (err, res) => {\n            if (res.destroyed) {\n                return;\n            }\n            if (res.headersSent) {\n                res.end();\n                return;\n            }\n            res.statusCode = enums_1.HttpStatus.BAD_REQUEST;\n            res.send(err.message);\n        };\n        if (util_1.types.isUint8Array(bufferOrReadStream)) {\n            this.stream = new stream_1.Readable();\n            this.stream.push(bufferOrReadStream);\n            this.stream.push(null);\n            (_a = (_b = this.options).length) !== null && _a !== void 0 ? _a : (_b.length = bufferOrReadStream.length);\n        }\n        else if (bufferOrReadStream.pipe && (0, shared_utils_1.isFunction)(bufferOrReadStream.pipe)) {\n            this.stream = bufferOrReadStream;\n        }\n    }\n    getStream() {\n        return this.stream;\n    }\n    getHeaders() {\n        const { type = 'application/octet-stream', disposition = undefined, length = undefined, } = this.options;\n        return {\n            type,\n            disposition,\n            length,\n        };\n    }\n    get errorHandler() {\n        return this.handleError;\n    }\n    setErrorHandler(handler) {\n        this.handleError = handler;\n        return this;\n    }\n}\nexports.StreamableFile = StreamableFile;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,cAAc,GAAG,KAAK,CAAC;AAC/B,MAAMC,QAAQ,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAClC,MAAMC,MAAM,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC9B,MAAME,OAAO,GAAGF,OAAO,CAAC,UAAU,CAAC;AACnC,MAAMG,cAAc,GAAGH,OAAO,CAAC,uBAAuB,CAAC;AACvD;AACA;AACA;AACA;AACA;AACA,MAAMF,cAAc,CAAC;EACjBM,WAAWA,CAACC,kBAAkB,EAAgB;IAAA,IAAdC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IACxC,IAAIG,EAAE;IACN,IAAIC,EAAE;IACN,IAAI,CAACL,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACM,WAAW,GAAG,CAACC,GAAG,EAAEC,GAAG,KAAK;MAC7B,IAAIA,GAAG,CAACC,SAAS,EAAE;QACf;MACJ;MACA,IAAID,GAAG,CAACE,WAAW,EAAE;QACjBF,GAAG,CAACG,GAAG,CAAC,CAAC;QACT;MACJ;MACAH,GAAG,CAACI,UAAU,GAAGhB,OAAO,CAACiB,UAAU,CAACC,WAAW;MAC/CN,GAAG,CAACO,IAAI,CAACR,GAAG,CAACS,OAAO,CAAC;IACzB,CAAC;IACD,IAAIrB,MAAM,CAACsB,KAAK,CAACC,YAAY,CAACnB,kBAAkB,CAAC,EAAE;MAC/C,IAAI,CAACoB,MAAM,GAAG,IAAI1B,QAAQ,CAAC2B,QAAQ,CAAC,CAAC;MACrC,IAAI,CAACD,MAAM,CAACE,IAAI,CAACtB,kBAAkB,CAAC;MACpC,IAAI,CAACoB,MAAM,CAACE,IAAI,CAAC,IAAI,CAAC;MACtB,CAACjB,EAAE,GAAG,CAACC,EAAE,GAAG,IAAI,CAACL,OAAO,EAAEE,MAAM,MAAM,IAAI,IAAIE,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAIC,EAAE,CAACH,MAAM,GAAGH,kBAAkB,CAACG,MAAO;IAC9G,CAAC,MACI,IAAIH,kBAAkB,CAACuB,IAAI,IAAI,CAAC,CAAC,EAAEzB,cAAc,CAAC0B,UAAU,EAAExB,kBAAkB,CAACuB,IAAI,CAAC,EAAE;MACzF,IAAI,CAACH,MAAM,GAAGpB,kBAAkB;IACpC;EACJ;EACAyB,SAASA,CAAA,EAAG;IACR,OAAO,IAAI,CAACL,MAAM;EACtB;EACAM,UAAUA,CAAA,EAAG;IACT,MAAM;MAAEC,IAAI,GAAG,0BAA0B;MAAEC,WAAW,GAAGxB,SAAS;MAAED,MAAM,GAAGC;IAAW,CAAC,GAAG,IAAI,CAACH,OAAO;IACxG,OAAO;MACH0B,IAAI;MACJC,WAAW;MACXzB;IACJ,CAAC;EACL;EACA,IAAI0B,YAAYA,CAAA,EAAG;IACf,OAAO,IAAI,CAACtB,WAAW;EAC3B;EACAuB,eAAeA,CAACC,OAAO,EAAE;IACrB,IAAI,CAACxB,WAAW,GAAGwB,OAAO;IAC1B,OAAO,IAAI;EACf;AACJ;AACAxC,OAAO,CAACE,cAAc,GAAGA,cAAc"},"metadata":{},"sourceType":"script","externalDependencies":[]}