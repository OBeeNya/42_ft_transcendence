{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CacheModule = void 0;\nconst tslib_1 = require(\"tslib\");\nconst decorators_1 = require(\"../decorators\");\nconst cache_constants_1 = require(\"./cache.constants\");\nconst cache_module_definition_1 = require(\"./cache.module-definition\");\nconst cache_providers_1 = require(\"./cache.providers\");\n/**\n * Module that provides Nest cache-manager.\n *\n * @see [Caching](https://docs.nestjs.com/techniques/caching)\n * @deprecated `CacheModule` (from the `@nestjs/common` package) is deprecated and will be removed in the next major release. Please, use the `@nestjs/cache-manager` package instead\n * @publicApi\n */\nlet CacheModule = class CacheModule extends cache_module_definition_1.ConfigurableModuleClass {\n  /**\n   * Configure the cache manager statically.\n   *\n   * @param options options to configure the cache manager\n   *\n   * @see [Customize caching](https://docs.nestjs.com/techniques/caching#customize-caching)\n   */\n  static register() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Object.assign({\n      global: options.isGlobal\n    }, super.register(options));\n  }\n  /**\n   * Configure the cache manager dynamically.\n   *\n   * @param options method for dynamically supplying cache manager configuration\n   * options\n   *\n   * @see [Async configuration](https://docs.nestjs.com/techniques/caching#async-configuration)\n   */\n  static registerAsync(options) {\n    const moduleDefinition = super.registerAsync(options);\n    return Object.assign(Object.assign({\n      global: options.isGlobal\n    }, moduleDefinition), {\n      providers: options.extraProviders ? moduleDefinition.providers.concat(options.extraProviders) : moduleDefinition.providers\n    });\n  }\n};\nCacheModule = tslib_1.__decorate([(0, decorators_1.Module)({\n  providers: [(0, cache_providers_1.createCacheManager)()],\n  exports: [cache_constants_1.CACHE_MANAGER]\n})], CacheModule);\nexports.CacheModule = CacheModule;","map":{"version":3,"names":["Object","defineProperty","exports","value","CacheModule","tslib_1","require","decorators_1","cache_constants_1","cache_module_definition_1","cache_providers_1","ConfigurableModuleClass","register","options","arguments","length","undefined","assign","global","isGlobal","registerAsync","moduleDefinition","providers","extraProviders","concat","__decorate","Module","createCacheManager","CACHE_MANAGER"],"sources":["/home/benjamin/Documents/42/42_ft_transcendence/front/node_modules/@nestjs/common/cache/cache.module.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CacheModule = void 0;\nconst tslib_1 = require(\"tslib\");\nconst decorators_1 = require(\"../decorators\");\nconst cache_constants_1 = require(\"./cache.constants\");\nconst cache_module_definition_1 = require(\"./cache.module-definition\");\nconst cache_providers_1 = require(\"./cache.providers\");\n/**\n * Module that provides Nest cache-manager.\n *\n * @see [Caching](https://docs.nestjs.com/techniques/caching)\n * @deprecated `CacheModule` (from the `@nestjs/common` package) is deprecated and will be removed in the next major release. Please, use the `@nestjs/cache-manager` package instead\n * @publicApi\n */\nlet CacheModule = class CacheModule extends cache_module_definition_1.ConfigurableModuleClass {\n    /**\n     * Configure the cache manager statically.\n     *\n     * @param options options to configure the cache manager\n     *\n     * @see [Customize caching](https://docs.nestjs.com/techniques/caching#customize-caching)\n     */\n    static register(options = {}) {\n        return Object.assign({ global: options.isGlobal }, super.register(options));\n    }\n    /**\n     * Configure the cache manager dynamically.\n     *\n     * @param options method for dynamically supplying cache manager configuration\n     * options\n     *\n     * @see [Async configuration](https://docs.nestjs.com/techniques/caching#async-configuration)\n     */\n    static registerAsync(options) {\n        const moduleDefinition = super.registerAsync(options);\n        return Object.assign(Object.assign({ global: options.isGlobal }, moduleDefinition), { providers: options.extraProviders\n                ? moduleDefinition.providers.concat(options.extraProviders)\n                : moduleDefinition.providers });\n    }\n};\nCacheModule = tslib_1.__decorate([\n    (0, decorators_1.Module)({\n        providers: [(0, cache_providers_1.createCacheManager)()],\n        exports: [cache_constants_1.CACHE_MANAGER],\n    })\n], CacheModule);\nexports.CacheModule = CacheModule;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,WAAW,GAAG,KAAK,CAAC;AAC5B,MAAMC,OAAO,GAAGC,OAAO,CAAC,OAAO,CAAC;AAChC,MAAMC,YAAY,GAAGD,OAAO,CAAC,eAAe,CAAC;AAC7C,MAAME,iBAAiB,GAAGF,OAAO,CAAC,mBAAmB,CAAC;AACtD,MAAMG,yBAAyB,GAAGH,OAAO,CAAC,2BAA2B,CAAC;AACtE,MAAMI,iBAAiB,GAAGJ,OAAO,CAAC,mBAAmB,CAAC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIF,WAAW,GAAG,MAAMA,WAAW,SAASK,yBAAyB,CAACE,uBAAuB,CAAC;EAC1F;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,OAAOC,QAAQA,CAAA,EAAe;IAAA,IAAdC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IACxB,OAAOd,MAAM,CAACiB,MAAM,CAAC;MAAEC,MAAM,EAAEL,OAAO,CAACM;IAAS,CAAC,EAAE,KAAK,CAACP,QAAQ,CAACC,OAAO,CAAC,CAAC;EAC/E;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI,OAAOO,aAAaA,CAACP,OAAO,EAAE;IAC1B,MAAMQ,gBAAgB,GAAG,KAAK,CAACD,aAAa,CAACP,OAAO,CAAC;IACrD,OAAOb,MAAM,CAACiB,MAAM,CAACjB,MAAM,CAACiB,MAAM,CAAC;MAAEC,MAAM,EAAEL,OAAO,CAACM;IAAS,CAAC,EAAEE,gBAAgB,CAAC,EAAE;MAAEC,SAAS,EAAET,OAAO,CAACU,cAAc,GAC7GF,gBAAgB,CAACC,SAAS,CAACE,MAAM,CAACX,OAAO,CAACU,cAAc,CAAC,GACzDF,gBAAgB,CAACC;IAAU,CAAC,CAAC;EAC3C;AACJ,CAAC;AACDlB,WAAW,GAAGC,OAAO,CAACoB,UAAU,CAAC,CAC7B,CAAC,CAAC,EAAElB,YAAY,CAACmB,MAAM,EAAE;EACrBJ,SAAS,EAAE,CAAC,CAAC,CAAC,EAAEZ,iBAAiB,CAACiB,kBAAkB,EAAE,CAAC,CAAC;EACxDzB,OAAO,EAAE,CAACM,iBAAiB,CAACoB,aAAa;AAC7C,CAAC,CAAC,CACL,EAAExB,WAAW,CAAC;AACfF,OAAO,CAACE,WAAW,GAAGA,WAAW"},"metadata":{},"sourceType":"script","externalDependencies":[]}