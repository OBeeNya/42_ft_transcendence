{"ast":null,"code":"var _jsxFileName = \"/home/benjamin/Documents/42/42_ft_transcendence/front/src/scenes/Tfa/TfaPage.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { ax } from '../../services/axios/axios';\nimport axios from 'axios';\n// import QRCode from 'react-qr-code';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TfaPage = () => {\n  _s();\n  const [userInfos, setUserInfos] = useState(null); //creer une interface afin d'acceder a tout\n  const [qrCodeUrl, setQRCodeUrl] = useState('');\n  const token = localStorage.getItem(\"token\");\n  useEffect(() => {\n    const getUsers = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8080/users/me\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setUserInfos(response.data);\n      } catch (error) {\n        console.error(\"Failed to fetch users.\");\n      }\n    };\n    getUsers();\n  }, [token]);\n  const getCode = async () => {\n    try {\n      const response = await ax.post(\"http://localhost:8080/users/qrcode\", {\n        name: userInfos === null || userInfos === void 0 ? void 0 : userInfos.name\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setQRCodeUrl(response.data);\n    } catch (e) {\n      console.log(\"could not get qrcode\");\n    }\n  };\n  // getCode();\n\n  // const QRCodeComponent = ({ qrCodeUrl }: any) => {\n  // \treturn <QRCode value={qrCodeUrl} />;\n  //   };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getCode,\n      children: \"Get qr code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: qrCodeUrl,\n      alt: \"qrcode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Enter your verification code:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 3\n  }, this);\n};\n_s(TfaPage, \"cwOEni2Pfea+cfdeBb2e0yrC1Xs=\");\n_c = TfaPage;\nexport default TfaPage;\nvar _c;\n$RefreshReg$(_c, \"TfaPage\");","map":{"version":3,"names":["useEffect","useState","ax","axios","jsxDEV","_jsxDEV","TfaPage","_s","userInfos","setUserInfos","qrCodeUrl","setQRCodeUrl","token","localStorage","getItem","getUsers","response","get","headers","Authorization","data","error","console","getCode","post","name","e","log","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","type","_c","$RefreshReg$"],"sources":["/home/benjamin/Documents/42/42_ft_transcendence/front/src/scenes/Tfa/TfaPage.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { ax } from '../../services/axios/axios'\nimport { UserInfos } from '../../services/interfaces/userInfos.interface';\nimport axios from 'axios';\n// import QRCode from 'react-qr-code';\n\nconst TfaPage = () => {\n\n\tconst [userInfos, setUserInfos] = useState<UserInfos | null>(null); //creer une interface afin d'acceder a tout\n\tconst [qrCodeUrl, setQRCodeUrl] = useState('');\n\tconst token = localStorage.getItem(\"token\");\n\n\tuseEffect(() => {\n\t\tconst getUsers = async () => {\n\t\t\ttry {\n\t\t\t\tconst response = await axios.get(\"http://localhost:8080/users/me\", {\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\tsetUserInfos(response.data);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(\"Failed to fetch users.\");\n\t\t\t}\n\t\t};\n\t\tgetUsers();\n\t}, [token]);\n\n\tconst getCode = async () => {\n\t\ttry {\n\t\t\tconst response = await ax.post(\"http://localhost:8080/users/qrcode\",\n\t\t\t\t{ name: userInfos?.name }, {\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t\t},\n\t\t\t}\n\t\t\t);\n\t\t\tsetQRCodeUrl(response.data);\n\t\t}\n\t\tcatch (e) {\n\t\t\tconsole.log(\"could not get qrcode\");\n\t\t}\n\t}\n\t// getCode();\n\n\t// const QRCodeComponent = ({ qrCodeUrl }: any) => {\n\t// \treturn <QRCode value={qrCodeUrl} />;\n\t//   };\n\n\treturn (\n\t\t<div>\n\t\t\t<button onClick={getCode}>Get qr code</button>\n\t\t\t{/* {qrCodeUrl && <QRCodeComponent qrCodeUrl={qrCodeUrl} />} */}\n\t\t\t{/* <QRCode\n\t\t\t\tvalue={qrCodeUrl}\n\t\t\t/> */}\n\t\t\t<img src={qrCodeUrl} alt=\"qrcode\"/>\n\t\t\t<label>Enter your verification code:</label>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default TfaPage;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,EAAE,QAAQ,4BAA4B;AAE/C,OAAOC,KAAK,MAAM,OAAO;AACzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAErB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAmB,IAAI,CAAC,CAAC,CAAC;EACpE,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMW,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3Cd,SAAS,CAAC,MAAM;IACf,MAAMe,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACH,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,gCAAgC,EAAE;UAClEC,OAAO,EAAE;YACRC,aAAa,EAAG,UAASP,KAAM;UAChC;QACD,CAAC,CAAC;QACFH,YAAY,CAACO,QAAQ,CAACI,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACfC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAC;MACxC;IACD,CAAC;IACDN,QAAQ,CAAC,CAAC;EACX,CAAC,EAAE,CAACH,KAAK,CAAC,CAAC;EAEX,MAAMW,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACH,MAAMP,QAAQ,GAAG,MAAMd,EAAE,CAACsB,IAAI,CAAC,oCAAoC,EAClE;QAAEC,IAAI,EAAEjB,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEiB;MAAK,CAAC,EAAE;QAC3BP,OAAO,EAAE;UACRC,aAAa,EAAG,UAASP,KAAM;QAChC;MACD,CACA,CAAC;MACDD,YAAY,CAACK,QAAQ,CAACI,IAAI,CAAC;IAC5B,CAAC,CACD,OAAOM,CAAC,EAAE;MACTJ,OAAO,CAACK,GAAG,CAAC,sBAAsB,CAAC;IACpC;EACD,CAAC;EACD;;EAEA;EACA;EACA;;EAEA,oBACCtB,OAAA;IAAAuB,QAAA,gBACCvB,OAAA;MAAQwB,OAAO,EAAEN,OAAQ;MAAAK,QAAA,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAK9C5B,OAAA;MAAK6B,GAAG,EAAExB,SAAU;MAACyB,GAAG,EAAC;IAAQ;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACnC5B,OAAA;MAAAuB,QAAA,EAAO;IAA6B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC5C5B,OAAA;MACC+B,IAAI,EAAC;IAAM;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAER,CAAC;AAAC1B,EAAA,CAzDID,OAAO;AAAA+B,EAAA,GAAP/B,OAAO;AA2Db,eAAeA,OAAO;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}