{"ast":null,"code":"var _jsxFileName = \"/goinfre/lsalin/42_ft_transcendence/front/src/scenes/Chat/ChatPage.tsx\",\n  _s = $RefreshSig$();\n// import { Link } from \"react-router-dom\";\n// import Header from \"../../components/header\"\n\n// const ChatPage = () =>\n// {\n// \treturn (\n// \t\t<div>\n// \t\t\t<Header />\n// \t\t</div>\n// \t);\n// };\n\n// export default ChatPage;\n\nimport { useState, useEffect } from \"react\";\nimport Header from \"../../components/header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatPage = () => {\n  _s();\n  const [chatRooms, setChatRooms] = useState([]); // chat rooms list state\n  const [currentRoom, setCurrentRoom] = useState(null); // currently selected chat room\n  const [messages, setMessages] = useState([]); // messages in the currently selected room\n\n  // Fetch chat rooms when component mounts\n  useEffect(() => {\n    fetchChatRooms();\n  }, []);\n  const fetchChatRooms = async () => {\n    // Fetch chat rooms from the API (replace with your API call)\n    const data = await fetch(\"/api/chatRooms\").then(res => res.json());\n    setChatRooms(data);\n  };\n  const handleRoomClick = async room => {\n    setCurrentRoom(room);\n    // Fetch messages for this room from the API (replace with your API call)\n    const data = await fetch(`/api/chatRooms/${room.id}/messages`).then(res => res.json());\n    setMessages(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-rooms\",\n      children: chatRooms.map(room => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleRoomClick(room),\n        children: room.name\n      }, room.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), currentRoom && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-room\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: currentRoom.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: msg.user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), \": \", msg.text]\n      }, msg.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatPage, \"Y4z6AWBICLdOjD7JyRb4Le0a3oo=\");\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["useState","useEffect","Header","jsxDEV","_jsxDEV","ChatPage","_s","chatRooms","setChatRooms","currentRoom","setCurrentRoom","messages","setMessages","fetchChatRooms","data","fetch","then","res","json","handleRoomClick","room","id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","onClick","name","msg","user","text","_c","$RefreshReg$"],"sources":["/goinfre/lsalin/42_ft_transcendence/front/src/scenes/Chat/ChatPage.tsx"],"sourcesContent":["// import { Link } from \"react-router-dom\";\n// import Header from \"../../components/header\"\n\n// const ChatPage = () =>\n// {\n// \treturn (\n// \t\t<div>\n// \t\t\t<Header />\n// \t\t</div>\n// \t);\n// };\n\n// export default ChatPage;\n\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Header from \"../../components/header\";\n\nconst ChatPage = () => {\n  const [chatRooms, setChatRooms] = useState([]); // chat rooms list state\n  const [currentRoom, setCurrentRoom] = useState(null); // currently selected chat room\n  const [messages, setMessages] = useState([]); // messages in the currently selected room\n\n  // Fetch chat rooms when component mounts\n  useEffect(() => {\n    fetchChatRooms();\n  }, []);\n\n  const fetchChatRooms = async () => {\n    // Fetch chat rooms from the API (replace with your API call)\n    const data = await fetch(\"/api/chatRooms\").then(res => res.json());\n    setChatRooms(data);\n  };\n\n  const handleRoomClick = async (room) => {\n    setCurrentRoom(room);\n    // Fetch messages for this room from the API (replace with your API call)\n    const data = await fetch(`/api/chatRooms/${room.id}/messages`).then(res => res.json());\n    setMessages(data);\n  };\n\n  return (\n    <div>\n      <Header />\n      <div className=\"chat-rooms\">\n        {chatRooms.map(room => (\n          <div key={room.id} onClick={() => handleRoomClick(room)}>\n            {room.name}\n          </div>\n        ))}\n      </div>\n      {currentRoom && (\n        <div className=\"chat-room\">\n          <h2>{currentRoom.name}</h2>\n          {messages.map(msg => (\n            <div key={msg.id}>\n              <b>{msg.user}</b>: {msg.text}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}