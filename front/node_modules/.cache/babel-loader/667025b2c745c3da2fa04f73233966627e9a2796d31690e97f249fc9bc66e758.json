{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isLogLevelEnabled = void 0;\nconst LOG_LEVEL_VALUES = {\n  debug: 0,\n  verbose: 1,\n  log: 2,\n  warn: 3,\n  error: 4\n};\n/**\n * Checks if target level is enabled.\n * @param targetLevel target level\n * @param logLevels array of enabled log levels\n */\nfunction isLogLevelEnabled(targetLevel, logLevels) {\n  var _a;\n  if (!logLevels || Array.isArray(logLevels) && (logLevels === null || logLevels === void 0 ? void 0 : logLevels.length) === 0) {\n    return false;\n  }\n  if (logLevels.includes(targetLevel)) {\n    return true;\n  }\n  const highestLogLevelValue = (_a = logLevels.map(level => LOG_LEVEL_VALUES[level]).sort((a, b) => b - a)) === null || _a === void 0 ? void 0 : _a[0];\n  const targetLevelValue = LOG_LEVEL_VALUES[targetLevel];\n  return targetLevelValue >= highestLogLevelValue;\n}\nexports.isLogLevelEnabled = isLogLevelEnabled;","map":{"version":3,"names":["Object","defineProperty","exports","value","isLogLevelEnabled","LOG_LEVEL_VALUES","debug","verbose","log","warn","error","targetLevel","logLevels","_a","Array","isArray","length","includes","highestLogLevelValue","map","level","sort","a","b","targetLevelValue"],"sources":["/home/benjamin/Documents/42/42_ft_transcendence/front/node_modules/@nestjs/common/services/utils/is-log-level-enabled.util.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isLogLevelEnabled = void 0;\nconst LOG_LEVEL_VALUES = {\n    debug: 0,\n    verbose: 1,\n    log: 2,\n    warn: 3,\n    error: 4,\n};\n/**\n * Checks if target level is enabled.\n * @param targetLevel target level\n * @param logLevels array of enabled log levels\n */\nfunction isLogLevelEnabled(targetLevel, logLevels) {\n    var _a;\n    if (!logLevels || (Array.isArray(logLevels) && (logLevels === null || logLevels === void 0 ? void 0 : logLevels.length) === 0)) {\n        return false;\n    }\n    if (logLevels.includes(targetLevel)) {\n        return true;\n    }\n    const highestLogLevelValue = (_a = logLevels\n        .map(level => LOG_LEVEL_VALUES[level])\n        .sort((a, b) => b - a)) === null || _a === void 0 ? void 0 : _a[0];\n    const targetLevelValue = LOG_LEVEL_VALUES[targetLevel];\n    return targetLevelValue >= highestLogLevelValue;\n}\nexports.isLogLevelEnabled = isLogLevelEnabled;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,iBAAiB,GAAG,KAAK,CAAC;AAClC,MAAMC,gBAAgB,GAAG;EACrBC,KAAK,EAAE,CAAC;EACRC,OAAO,EAAE,CAAC;EACVC,GAAG,EAAE,CAAC;EACNC,IAAI,EAAE,CAAC;EACPC,KAAK,EAAE;AACX,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,SAASN,iBAAiBA,CAACO,WAAW,EAAEC,SAAS,EAAE;EAC/C,IAAIC,EAAE;EACN,IAAI,CAACD,SAAS,IAAKE,KAAK,CAACC,OAAO,CAACH,SAAS,CAAC,IAAI,CAACA,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,SAAS,CAACI,MAAM,MAAM,CAAE,EAAE;IAC5H,OAAO,KAAK;EAChB;EACA,IAAIJ,SAAS,CAACK,QAAQ,CAACN,WAAW,CAAC,EAAE;IACjC,OAAO,IAAI;EACf;EACA,MAAMO,oBAAoB,GAAG,CAACL,EAAE,GAAGD,SAAS,CACvCO,GAAG,CAACC,KAAK,IAAIf,gBAAgB,CAACe,KAAK,CAAC,CAAC,CACrCC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAGD,CAAC,CAAC,MAAM,IAAI,IAAIT,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC,CAAC,CAAC;EACtE,MAAMW,gBAAgB,GAAGnB,gBAAgB,CAACM,WAAW,CAAC;EACtD,OAAOa,gBAAgB,IAAIN,oBAAoB;AACnD;AACAhB,OAAO,CAACE,iBAAiB,GAAGA,iBAAiB"},"metadata":{},"sourceType":"script","externalDependencies":[]}