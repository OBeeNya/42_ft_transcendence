{"ast":null,"code":"var _jsxFileName = \"/home/benjamin/Documents/42/42_ft_transcendence/front/src/pages/SignupPage.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport Content from \"../components/content\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignupPage = () => {\n  _s();\n  const [nameInput, setName] = useState('');\n  const [passwordInput, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleSignup = async () => {\n\n    // try {\n    // \tconst dto: AuthDto = {\n    // \t\t\tname: nameInput,\n    // \t\t\tpassword: passwordInput,\n    // \t\t};\n    // \tconst response = await ax.post('auth/signup', dto);\n    // \tconsole.log(\"response status =====>\", response.status);\n    // \tif (response.status === 200 || response.status === 201) {\n    // \t\tnavigate('/');\n    // \t}\n    // } catch (error) {\n    // \tconst axiosError = error as AxiosError<{ message: string; statusCode: number }>;\n\n    // \tif (axiosError?.response?.data?.message === \"Credentials taken\") {\n    // \t\tconst message = document.getElementById(\"message\");\n\n    // \t\tif (message) { message.textContent = \"This userName is already taken\"; }\n    // \t\tconsole.log(\"This userName is already taken\");\n\n    // \t} else {\n    // \t\tconsole.error('Failed to sign up');\n    // \t}\n    // };\n  };\n  return /*#__PURE__*/_jsxDEV(Content, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: nameInput,\n          onChange: event => setName(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: passwordInput,\n          onChange: event => setPassword(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSignup,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }, this);\n};\n_s(SignupPage, \"SjyZLv8kIGByqEkbeSlQjcdt3jQ=\", false, function () {\n  return [useNavigate];\n});\n_c = SignupPage;\nexport default SignupPage;\nvar _c;\n$RefreshReg$(_c, \"SignupPage\");","map":{"version":3,"names":["useState","useNavigate","Content","jsxDEV","_jsxDEV","SignupPage","_s","nameInput","setName","passwordInput","setPassword","navigate","handleSignup","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","event","target","onClick","id","_c","$RefreshReg$"],"sources":["/home/benjamin/Documents/42/42_ft_transcendence/front/src/pages/SignupPage.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { ax } from '../axios/axios'\nimport { AxiosError } from 'axios'\nimport { AuthDto } from \"../../../back/auth/dto\";\nimport Content from \"../components/content\"\n\n\nconst SignupPage = () => {\n\n\tconst [nameInput, setName] = useState('');\n\tconst [passwordInput, setPassword] = useState('');\n\t\n\tconst navigate = useNavigate();\n\t\n\tconst handleSignup = async () => {\n\t\t\n\t\t// try {\n\t\t// \tconst dto: AuthDto = {\n\t\t// \t\t\tname: nameInput,\n\t\t// \t\t\tpassword: passwordInput,\n\t\t// \t\t};\n\t\t// \tconst response = await ax.post('auth/signup', dto);\n\t\t// \tconsole.log(\"response status =====>\", response.status);\n\t\t// \tif (response.status === 200 || response.status === 201) {\n\t\t// \t\tnavigate('/');\n\t\t// \t}\n\t\t// } catch (error) {\n\t\t// \tconst axiosError = error as AxiosError<{ message: string; statusCode: number }>;\n\n\t\t// \tif (axiosError?.response?.data?.message === \"Credentials taken\") {\n\t\t// \t\tconst message = document.getElementById(\"message\");\n\t\t\t\t\n\t\t// \t\tif (message) { message.textContent = \"This userName is already taken\"; }\n\t\t// \t\tconsole.log(\"This userName is already taken\");\n\t\t\t\n\t\t// \t} else {\n\t\t// \t\tconsole.error('Failed to sign up');\n\t\t// \t}\n\t\t// };\n\t};\n\n\treturn (\n\t\t<Content>\n\t\t\t<div>\n\t\t\t\t<h1>Signup</h1>\n\t\t\t\t<div>\n\t\t\t\t\t<label>Name:</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={nameInput}\n\t\t\t\t\t\tonChange={(event) => setName(event.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<label>Password:</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tvalue={passwordInput}\n\t\t\t\t\t\tonChange={(event) => setPassword(event.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<button onClick={handleSignup}>Submit</button>\n\t\t\t\t<div id=\"message\"></div>\n\t\t\t</div>\n\t\t</Content>\n\t);\n\n};\n\nexport default SignupPage;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAI9C,OAAOC,OAAO,MAAM,uBAAuB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG3C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAExB,MAAM,CAACC,SAAS,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAM,CAACS,aAAa,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEjD,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,YAAY,GAAG,MAAAA,CAAA,KAAY;;IAEhC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;;IAEA;IACA;;IAEA;IACA;IACA;IACA;EAAA,CACA;EAED,oBACCR,OAAA,CAACF,OAAO;IAAAW,QAAA,eACPT,OAAA;MAAAS,QAAA,gBACCT,OAAA;QAAAS,QAAA,EAAI;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACfb,OAAA;QAAAS,QAAA,gBACCT,OAAA;UAAAS,QAAA,EAAO;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpBb,OAAA;UACCc,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEZ,SAAU;UACjBa,QAAQ,EAAGC,KAAK,IAAKb,OAAO,CAACa,KAAK,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACNb,OAAA;QAAAS,QAAA,gBACCT,OAAA;UAAAS,QAAA,EAAO;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACxBb,OAAA;UACCc,IAAI,EAAC,UAAU;UACfC,KAAK,EAAEV,aAAc;UACrBW,QAAQ,EAAGC,KAAK,IAAKX,WAAW,CAACW,KAAK,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACNb,OAAA;QAAQmB,OAAO,EAAEX,YAAa;QAAAC,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC9Cb,OAAA;QAAKoB,EAAE,EAAC;MAAS;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAGZ,CAAC;AAACX,EAAA,CA5DID,UAAU;EAAA,QAKEJ,WAAW;AAAA;AAAAwB,EAAA,GALvBpB,UAAU;AA8DhB,eAAeA,UAAU;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}