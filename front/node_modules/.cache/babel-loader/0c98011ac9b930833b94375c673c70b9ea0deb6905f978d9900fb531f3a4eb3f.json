{"ast":null,"code":"// import { useEffect, useState } from \"react\";\n// import { UserInfos } from \"../../services/interfaces/userInfos.interface\"\n// import axios from \"axios\";\n// import './Leaderboard.css';\n\n// const Leaderboard = () => \n// {\n// \tconst [users, setUsers] = useState([]);\n// \tconst token = localStorage.getItem(\"token\");\n\n// \tuseEffect(() =>\n// \t{\n// \t\tconst fetchUsers = async () =>\n// \t\t{\n// \t\t\ttry\n// \t\t\t{\n// \t\t\t\tconst response = await axios.get(\"http://localhost:8080/users\",\n// \t\t\t\t{\n// \t\t\t\t\theaders:\n// \t\t\t\t\t{\n// \t\t\t\t\t\tAuthorization: `Bearer ${token}`,\n// \t\t\t\t\t},\n// \t\t\t\t});\n\n// \t\t\t\tsetUsers(response.data);\n// \t\t\t}\n// \t\t\tcatch (error)\n// \t\t\t{\n// \t\t\t\tconsole.error('Error fetching users:', error);\n// \t\t\t}\n// \t\t};\n\n// \t\tfetchUsers();\n\n// \t}, [token]);\n\n//   return (\n//     <div className=\"content-body leaderboard\">\n//       <h1>Leaderboard</h1>\n//       <table>\n//         <thead>\n//           <tr>\n//             <th>Username</th>\n//             <th>Matches Played</th>\n//             <th>Wins</th>\n//             <th>Ratio</th>\n//             <th>Rank</th>\n//             <th>Status</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n// \t\t{users.map((user: UserInfos) =>\n// \t\t(\n//             <tr key={user.id}>\n//               <td>{user.name}</td>\n//               <td>{user.wins + user.losses}</td> {/* A ameliorer car ici matches played = simple addition victoires + défaites */}\n//               <td>{user.wins}</td>\n//               <td>{(user.wins / (user.wins + user.losses) * 100).toFixed(2)}%</td>\n//               <td>{user.ladder_level}</td>\n//               <td className={user.connected ? 'online' : 'offline'}>\n//                 {user.connected ?\n//                   <>\n//                     <div className=\"online-indicator\" />\n//                     <span>Online</span>\n//                   </> :\n//                   <>\n//                     <div className=\"offline-indicator\" />\n//                     <span>Offline</span>\n//                   </>\n//                 }\n//               </td>\n//               <td><button>Add Friend</button></td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// }\n\n// export default Leaderboard;","map":{"version":3,"names":[],"sources":["/goinfre/lsalin/42_ft_transcendence/front/src/scenes/Leaderboard/Leaderboard.tsx"],"sourcesContent":["// import { useEffect, useState } from \"react\";\n// import { UserInfos } from \"../../services/interfaces/userInfos.interface\"\n// import axios from \"axios\";\n// import './Leaderboard.css';\n\n// const Leaderboard = () => \n// {\n// \tconst [users, setUsers] = useState([]);\n// \tconst token = localStorage.getItem(\"token\");\n\n// \tuseEffect(() =>\n// \t{\n// \t\tconst fetchUsers = async () =>\n// \t\t{\n// \t\t\ttry\n// \t\t\t{\n// \t\t\t\tconst response = await axios.get(\"http://localhost:8080/users\",\n// \t\t\t\t{\n// \t\t\t\t\theaders:\n// \t\t\t\t\t{\n// \t\t\t\t\t\tAuthorization: `Bearer ${token}`,\n// \t\t\t\t\t},\n// \t\t\t\t});\n\n// \t\t\t\tsetUsers(response.data);\n// \t\t\t}\n// \t\t\tcatch (error)\n// \t\t\t{\n// \t\t\t\tconsole.error('Error fetching users:', error);\n// \t\t\t}\n// \t\t};\n\n// \t\tfetchUsers();\n\n// \t}, [token]);\n\n//   return (\n//     <div className=\"content-body leaderboard\">\n//       <h1>Leaderboard</h1>\n//       <table>\n//         <thead>\n//           <tr>\n//             <th>Username</th>\n//             <th>Matches Played</th>\n//             <th>Wins</th>\n//             <th>Ratio</th>\n//             <th>Rank</th>\n//             <th>Status</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n// \t\t{users.map((user: UserInfos) =>\n// \t\t(\n//             <tr key={user.id}>\n//               <td>{user.name}</td>\n//               <td>{user.wins + user.losses}</td> {/* A ameliorer car ici matches played = simple addition victoires + défaites */}\n//               <td>{user.wins}</td>\n//               <td>{(user.wins / (user.wins + user.losses) * 100).toFixed(2)}%</td>\n//               <td>{user.ladder_level}</td>\n//               <td className={user.connected ? 'online' : 'offline'}>\n//                 {user.connected ?\n//                   <>\n//                     <div className=\"online-indicator\" />\n//                     <span>Online</span>\n//                   </> :\n//                   <>\n//                     <div className=\"offline-indicator\" />\n//                     <span>Offline</span>\n//                   </>\n//                 }\n//               </td>\n//               <td><button>Add Friend</button></td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// }\n\n// export default Leaderboard;"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}