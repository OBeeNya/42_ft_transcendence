{"ast":null,"code":"var _jsxFileName = \"/home/benjamin/Documents/42/42_ft_transcendence/front/src/scenes/Tfa/TfaPage.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { ax } from '../../services/axios/axios';\nimport axios from 'axios';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TfaPage = () => {\n  _s();\n  const [userInfos, setUserInfos] = useState(null);\n  const [codeInput, setCode] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const getUsers = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8080/users/me\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setUserInfos(response.data);\n      } catch (error) {\n        console.error(\"Failed to fetch users.\");\n      }\n    };\n    getUsers();\n  }, [token]);\n  const handleChanges = async () => {\n    if (codeInput === '') return;\n    try {\n      const response = await ax.post(\"http://localhost:8080/users/qrcode/verify\", {\n        name: userInfos === null || userInfos === void 0 ? void 0 : userInfos.name,\n        otp: codeInput\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.data) {\n        navigate('/editprofile');\n        let tokentfa = localStorage.getItem('tokentfa');\n        if (!tokentfa) tokentfa = '';\n        localStorage.setItem(\"token\", tokentfa);\n        localStorage.setItem(\"isConnected\", \"yes\");\n        localStorage.setItem(\"userStatus\", \"connected\");\n        await ax.patch(\"users\", {\n          connected: true\n        }, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n      } else {\n        localStorage.setItem('tokentfa', '');\n        navigate('/');\n      }\n    } catch {\n      console.log(\"could not verify qrcode\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Enter your verification code:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: codeInput,\n      onChange: event => setCode(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleChanges,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 3\n  }, this);\n};\n_s(TfaPage, \"DbHAhtP7Eqy2pwS/2IoTg1pl5ng=\", false, function () {\n  return [useNavigate];\n});\n_c = TfaPage;\nexport default TfaPage;\nvar _c;\n$RefreshReg$(_c, \"TfaPage\");","map":{"version":3,"names":["useEffect","useState","ax","axios","useNavigate","jsxDEV","_jsxDEV","TfaPage","_s","userInfos","setUserInfos","codeInput","setCode","navigate","getUsers","response","get","headers","Authorization","token","data","error","console","handleChanges","post","name","otp","tokentfa","localStorage","getItem","setItem","patch","connected","log","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","event","target","onClick","_c","$RefreshReg$"],"sources":["/home/benjamin/Documents/42/42_ft_transcendence/front/src/scenes/Tfa/TfaPage.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { ax } from '../../services/axios/axios'\nimport { UserInfos } from '../../services/interfaces/userInfos.interface';\nimport axios from 'axios';\nimport { useNavigate } from \"react-router-dom\";\n\nconst TfaPage = () => {\n\t\n\tconst [userInfos, setUserInfos] = useState<UserInfos | null>(null);\n\tconst [codeInput, setCode] = useState('');\n\tconst navigate = useNavigate();\n\n\tuseEffect(() => {\n\t\tconst getUsers = async () => {\n\t\t\ttry {\n\t\t\t\tconst response = await axios.get(\"http://localhost:8080/users/me\", {\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\tsetUserInfos(response.data);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(\"Failed to fetch users.\");\n\t\t\t}\n\t\t};\n\t\tgetUsers();\n\t}, [token]);\n\n\tconst handleChanges = async () => {\n\t\tif (codeInput === '')\n\t\t\treturn ;\n\t\ttry {\n\t\t\tconst response = await ax.post(\"http://localhost:8080/users/qrcode/verify\",\n\t\t\t\t{ name: userInfos?.name, otp: codeInput }, {\n\t\t\t\theaders: { Authorization: `Bearer ${token}`, },\n\t\t\t});\n\t\t\tif (response.data) {\n\t\t\t\tnavigate('/editprofile');\n\t\t\t\tlet tokentfa = localStorage.getItem('tokentfa');\n\t\t\t\tif (!tokentfa)\n\t\t\t\t\ttokentfa = '';\n\t\t\t\tlocalStorage.setItem(\"token\", tokentfa);\n\t\t\t\tlocalStorage.setItem(\"isConnected\", \"yes\");\n\t\t\t\tlocalStorage.setItem(\"userStatus\", \"connected\");\n\t\t\t\tawait ax.patch(\"users\", {\n\t\t\t\t\t\tconnected: true,\n\t\t\t\t\t}, {\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem('token')}`\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocalStorage.setItem('tokentfa', '');\n\t\t\t\tnavigate('/');\n\t\t\t}\n\t\t}\n\t\tcatch {\n\t\t\tconsole.log(\"could not verify qrcode\");\n\t\t}\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<label>Enter your verification code:</label>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tvalue={codeInput}\n\t\t\t\tonChange={(event) => setCode(event.target.value)}\n\t\t\t/>\n\t\t\t<button onClick={handleChanges} >Submit</button>\n\t\t</div>\n\t);\n};\n\nexport default TfaPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}