{"ast":null,"code":"var _jsxFileName = \"/home/benjamin/Documents/42/42_ft_transcendence/front/src/components/protectedRoutes.tsx\";\n// import React, { useState, useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { ax } from '../axios/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst checkUserConnection = async () => {\n  try {\n    const token = localStorage.getItem(\"token\");\n    const response = await ax.get(\"http://localhost:8080/users/me\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    if (response.data.status === 401) {\n      localStorage.setItem(\"isConnected\", \"no\");\n    } else {\n      localStorage.setItem(\"isConnected\", \"yes\");\n    }\n  } catch (error) {\n    localStorage.setItem(\"isConnected\", \"no\");\n  }\n};\nexport function ProtectedRoute(_ref) {\n  let {\n    authenticationPath,\n    outlet\n  } = _ref;\n  checkUserConnection();\n  const isConnected = localStorage.getItem(\"isConnected\");\n  // console.log(\"isConnected:\", isConnected);\n\n  if (isConnected === \"yes\") {\n    // console.log(\"protectedRoute: connection ok\");\n\n    return outlet;\n  } else {\n    console.log(\"protectedRoute: connection KO\");\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: {\n        pathname: authenticationPath\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 14\n    }, this);\n  }\n}\n_c = ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["Navigate","ax","jsxDEV","_jsxDEV","checkUserConnection","token","localStorage","getItem","response","get","headers","Authorization","data","status","setItem","error","ProtectedRoute","_ref","authenticationPath","outlet","isConnected","console","log","to","pathname","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/benjamin/Documents/42/42_ft_transcendence/front/src/components/protectedRoutes.tsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\nimport { RouteProps, Navigate } from 'react-router-dom';\nimport { ax } from '../axios/axios';\n\nexport type ProtectedRouteProps = {\n  authenticationPath: string;\n  outlet: JSX.Element;\n};\n\n  const checkUserConnection = async () => {\n    try {\n\t  const token = localStorage.getItem(\"token\");\n\n    const response = await ax.get(\"http://localhost:8080/users/me\", {\n      headers: {\n      Authorization: `Bearer ${token}`,\n      },\n    });\n        if (response.data.status === 401) {\n          localStorage.setItem(\"isConnected\", \"no\");\n        } else {\n          localStorage.setItem(\"isConnected\", \"yes\");\n        }  \n      } catch (error) {\n        localStorage.setItem(\"isConnected\", \"no\");\n      }\n  };\n\nexport function ProtectedRoute({ authenticationPath, outlet }: ProtectedRouteProps & RouteProps) {\n  checkUserConnection();\n\tconst isConnected = localStorage.getItem(\"isConnected\");\n  // console.log(\"isConnected:\", isConnected);\n\n    if (isConnected === \"yes\") {\n      // console.log(\"protectedRoute: connection ok\");\n  \n      return outlet;\n    } else {\n      console.log(\"protectedRoute: connection KO\");\n      return <Navigate to={{ pathname: authenticationPath }} />;\n    }\n}"],"mappings":";AAAA;AACA,SAAqBA,QAAQ,QAAQ,kBAAkB;AACvD,SAASC,EAAE,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOlC,MAAMC,mBAAmB,GAAG,MAAAA,CAAA,KAAY;EACtC,IAAI;IACL,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE1C,MAAMC,QAAQ,GAAG,MAAMP,EAAE,CAACQ,GAAG,CAAC,gCAAgC,EAAE;MAC9DC,OAAO,EAAE;QACTC,aAAa,EAAG,UAASN,KAAM;MAC/B;IACF,CAAC,CAAC;IACE,IAAIG,QAAQ,CAACI,IAAI,CAACC,MAAM,KAAK,GAAG,EAAE;MAChCP,YAAY,CAACQ,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC;IAC3C,CAAC,MAAM;MACLR,YAAY,CAACQ,OAAO,CAAC,aAAa,EAAE,KAAK,CAAC;IAC5C;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdT,YAAY,CAACQ,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC;EAC3C;AACJ,CAAC;AAEH,OAAO,SAASE,cAAcA,CAAAC,IAAA,EAAmE;EAAA,IAAlE;IAAEC,kBAAkB;IAAEC;EAAyC,CAAC,GAAAF,IAAA;EAC7Fb,mBAAmB,CAAC,CAAC;EACtB,MAAMgB,WAAW,GAAGd,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;EACtD;;EAEE,IAAIa,WAAW,KAAK,KAAK,EAAE;IACzB;;IAEA,OAAOD,MAAM;EACf,CAAC,MAAM;IACLE,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC5C,oBAAOnB,OAAA,CAACH,QAAQ;MAACuB,EAAE,EAAE;QAAEC,QAAQ,EAAEN;MAAmB;IAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC3D;AACJ;AAACC,EAAA,GAbeb,cAAc;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}