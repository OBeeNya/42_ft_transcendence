{"ast":null,"code":"// import { useEffect, useState } from \"react\";\n// import { UserInfos } from \"../../services/interfaces/userInfos.interface\"\n// import axios from \"axios\";\n// import Content from \"../../components/content\"\n// import Header from \"../../components/header\"\n\n// const OnlinePage = () => \n// {\n// \t// const [userInfos, setUserInfos] = useState<UserInfos | null>(null);\n// \tconst\t[users, setUsers] = useState([]);\n// \tconst\ttoken = localStorage.getItem(\"token\");\n\n// \tuseEffect(() =>\n// \t{\n// \t\t// const getUsers = async () => {\n// \t\t//   try {\n// \t\t// \tconst response = await axios.get(\"http://localhost:8080/users/me\", {\n// \t\t// \t  headers: {\n// \t\t// \t\tAuthorization: `Bearer ${token}`,\n// \t\t// \t  },\n// \t\t// \t});\n// \t\t// \tsetUserInfos(response.data);\n// \t\t//   } catch (error) {\n// \t\t// \tconsole.error(\"Failed to fetch users.\");\n// \t\t//   }\n// \t\t// };\n// \t\t// getUsers();\n\n// \t\tconst\tfetchUsers = async () => \n// \t\t{\n// \t\t\ttry\n// \t\t\t{\n// \t\t\t  const\tresponse = await axios.get(\"http://localhost:8080/users\",\n// \t\t\t  {\n// \t\t\t\theaders:\n// \t\t\t\t{\n// \t\t\t\t\tAuthorization: `Bearer ${token}`,\n// \t\t\t\t},\n// \t\t\t  });\n\n// \t\t\t\tsetUsers(response.data);\n// \t\t\t}\n// \t\t\tcatch (error)\n// \t\t\t{\n// \t\t\t\tconsole.error('Error fetching users:', error);\n// \t\t\t}\n// \t\t  };\n\n// \t\t\tfetchUsers();\n// \t},[token]);\n\n// \tconst\tbooleanToString = (value: boolean) =>\n// \t{\n// \t\treturn (value ? 'Yes' : 'No');\n// \t};\n\n// \treturn (\n// \t\t<div>\n// \t\t\t<Header />\n// \t\t\t<Content>\n// \t\t\t\t<div>\n// \t\t\t\t<h1>User List</h1>\n//       \t\t\t<ul>\n//    \t\t\t\t    {users.map((user: UserInfos) => \n// \t\t\t\t\t(\n//         \t\t\t\t<li key={user.id}>\n// \t\t\t\t\t\t\t<div>\n// \t\t\t\t\t\t\t{user.name}\n// \t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\tOnline: {booleanToString(user.connected)}\n// \t\t\t\t\t\t</li>\n//         \t\t\t))}\n//       \t\t\t</ul>\n// \t\t\t\t</div>\n// \t\t\t</Content>\n// \t\t</div>\n// \t);\n// };\n\n// export default OnlinePage;","map":{"version":3,"names":[],"sources":["/goinfre/lsalin/42_ft_transcendence/front/src/scenes/Online/OnlinePage.tsx"],"sourcesContent":["// import { useEffect, useState } from \"react\";\n// import { UserInfos } from \"../../services/interfaces/userInfos.interface\"\n// import axios from \"axios\";\n// import Content from \"../../components/content\"\n// import Header from \"../../components/header\"\n\n// const OnlinePage = () => \n// {\n// \t// const [userInfos, setUserInfos] = useState<UserInfos | null>(null);\n// \tconst\t[users, setUsers] = useState([]);\n// \tconst\ttoken = localStorage.getItem(\"token\");\n\n// \tuseEffect(() =>\n// \t{\n// \t\t// const getUsers = async () => {\n// \t\t//   try {\n// \t\t// \tconst response = await axios.get(\"http://localhost:8080/users/me\", {\n// \t\t// \t  headers: {\n// \t\t// \t\tAuthorization: `Bearer ${token}`,\n// \t\t// \t  },\n// \t\t// \t});\n// \t\t// \tsetUserInfos(response.data);\n// \t\t//   } catch (error) {\n// \t\t// \tconsole.error(\"Failed to fetch users.\");\n// \t\t//   }\n// \t\t// };\n// \t\t// getUsers();\n\n// \t\tconst\tfetchUsers = async () => \n// \t\t{\n// \t\t\ttry\n// \t\t\t{\n// \t\t\t  const\tresponse = await axios.get(\"http://localhost:8080/users\",\n// \t\t\t  {\n// \t\t\t\theaders:\n// \t\t\t\t{\n// \t\t\t\t\tAuthorization: `Bearer ${token}`,\n// \t\t\t\t},\n// \t\t\t  });\n\n// \t\t\t\tsetUsers(response.data);\n// \t\t\t}\n// \t\t\tcatch (error)\n// \t\t\t{\n// \t\t\t\tconsole.error('Error fetching users:', error);\n// \t\t\t}\n// \t\t  };\n\n// \t\t\tfetchUsers();\n// \t},[token]);\n\n// \tconst\tbooleanToString = (value: boolean) =>\n// \t{\n// \t\treturn (value ? 'Yes' : 'No');\n// \t};\n\n// \treturn (\n// \t\t<div>\n// \t\t\t<Header />\n// \t\t\t<Content>\n// \t\t\t\t<div>\n// \t\t\t\t<h1>User List</h1>\n//       \t\t\t<ul>\n//    \t\t\t\t    {users.map((user: UserInfos) => \n// \t\t\t\t\t(\n//         \t\t\t\t<li key={user.id}>\n// \t\t\t\t\t\t\t<div>\n// \t\t\t\t\t\t\t{user.name}\n// \t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\tOnline: {booleanToString(user.connected)}\n// \t\t\t\t\t\t</li>\n//         \t\t\t))}\n//       \t\t\t</ul>\n// \t\t\t\t</div>\n// \t\t\t</Content>\n// \t\t</div>\n// \t);\n// };\n\n// export default OnlinePage;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}