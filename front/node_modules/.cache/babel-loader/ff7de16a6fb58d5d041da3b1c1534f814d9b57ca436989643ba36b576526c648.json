{"ast":null,"code":"var _jsxFileName = \"/goinfre/lsalin/42_ft_transcendence/front/src/scenes/Chat/ChatSidebar.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatSideBar = () => {\n  _s();\n  const [searchChannel, setSearchChannel] = useState(false);\n  const [addChannel, setAddChannel] = useState(false);\n  const [isSearchOpen, setIsSearchOpen] = useState(false);\n  const searchInputRef = useRef(null);\n  useEffect(() => {\n    if (isSearchOpen) {\n      const handleClickOutside = event => {\n        if (searchInputRef.current && !searchInputRef.current.contains(event.target)) {\n          setIsSearchOpen(false);\n        }\n      };\n\n      // Ajoute l'écouteur d'événements au document\n      document.addEventListener(\"mousedown\", handleClickOutside);\n\n      // Nettoie l'écouteur d'événements lorsque le composant se démonte ou lorsque `isSearchOpen` change\n      return () => {\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n    }\n  }, [isSearchOpen]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"channel-search-add\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"first-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"channels-text\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"CHANNELS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsSearchOpen(!isSearchOpen),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), isSearchOpen ? /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: searchInputRef,\n          type: \"text\",\n          placeholder: \"Search...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 37\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setAddChannel(!addChannel),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatSideBar, \"uwHKWwal4i1C6t+Di1ON8jZehRE=\");\n_c = ChatSideBar;\nexport default ChatSideBar;\nvar _c;\n$RefreshReg$(_c, \"ChatSideBar\");","map":{"version":3,"names":["useState","useRef","useEffect","jsxDEV","_jsxDEV","ChatSideBar","_s","searchChannel","setSearchChannel","addChannel","setAddChannel","isSearchOpen","setIsSearchOpen","searchInputRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","type","placeholder","_c","$RefreshReg$"],"sources":["/goinfre/lsalin/42_ft_transcendence/front/src/scenes/Chat/ChatSidebar.tsx"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\";\n\nconst ChatSideBar = () =>\n{\n    const [searchChannel, setSearchChannel] = useState(false);\n    const\t[addChannel, setAddChannel] = useState(false);\n    const\t[isSearchOpen, setIsSearchOpen] = useState(false);\n    const\tsearchInputRef = useRef<HTMLInputElement>(null);\n\n\n    useEffect(() => {\n        if (isSearchOpen) {\n            const handleClickOutside = (event: MouseEvent) => {\n\t\t\t\tif (searchInputRef.current && !searchInputRef.current.contains(event.target as Node)) {\n\t\t\t\t\tsetIsSearchOpen(false);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n            // Ajoute l'écouteur d'événements au document\n            document.addEventListener(\"mousedown\", handleClickOutside);\n\n            // Nettoie l'écouteur d'événements lorsque le composant se démonte ou lorsque `isSearchOpen` change\n            return () => {\n                document.removeEventListener(\"mousedown\", handleClickOutside);\n            };\n        }\n    }, [isSearchOpen]);\n\n    return (\n        <div className=\"channel-search-add\">\n            <div className=\"first-line\">\n                <div className=\"channels-text\">\n                    <p>CHANNELS</p>\n                </div>\n                <div className=\"icons\">\n                    <button onClick={() => setIsSearchOpen(!isSearchOpen)}>\n                        <i className=\"fas fa-search\"></i>\n                    </button>\n                    {isSearchOpen ? <input ref={searchInputRef} type=\"text\" placeholder=\"Search...\" /> : null}\n                    <button onClick={() => setAddChannel(!addChannel)}>\n                        <i className=\"fas fa-plus\"></i>\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ChatSideBar;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,WAAW,GAAGA,CAAA,KACpB;EAAAC,EAAA;EACI,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAMa,cAAc,GAAGZ,MAAM,CAAmB,IAAI,CAAC;EAGrDC,SAAS,CAAC,MAAM;IACZ,IAAIS,YAAY,EAAE;MACd,MAAMG,kBAAkB,GAAIC,KAAiB,IAAK;QAC1D,IAAIF,cAAc,CAACG,OAAO,IAAI,CAACH,cAAc,CAACG,OAAO,CAACC,QAAQ,CAACF,KAAK,CAACG,MAAc,CAAC,EAAE;UACrFN,eAAe,CAAC,KAAK,CAAC;QACvB;MACD,CAAC;;MAEQ;MACAO,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEN,kBAAkB,CAAC;;MAE1D;MACA,OAAO,MAAM;QACTK,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAEP,kBAAkB,CAAC;MACjE,CAAC;IACL;EACJ,CAAC,EAAE,CAACH,YAAY,CAAC,CAAC;EAElB,oBACIP,OAAA;IAAKkB,SAAS,EAAC,oBAAoB;IAAAC,QAAA,eAC/BnB,OAAA;MAAKkB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACvBnB,OAAA;QAAKkB,SAAS,EAAC,eAAe;QAAAC,QAAA,eAC1BnB,OAAA;UAAAmB,QAAA,EAAG;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAC,eACNvB,OAAA;QAAKkB,SAAS,EAAC,OAAO;QAAAC,QAAA,gBAClBnB,OAAA;UAAQwB,OAAO,EAAEA,CAAA,KAAMhB,eAAe,CAAC,CAACD,YAAY,CAAE;UAAAY,QAAA,eAClDnB,OAAA;YAAGkB,SAAS,EAAC;UAAe;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC,EACRhB,YAAY,gBAAGP,OAAA;UAAOyB,GAAG,EAAEhB,cAAe;UAACiB,IAAI,EAAC,MAAM;UAACC,WAAW,EAAC;QAAW;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,GAAG,IAAI,eACzFvB,OAAA;UAAQwB,OAAO,EAAEA,CAAA,KAAMlB,aAAa,CAAC,CAACD,UAAU,CAAE;UAAAc,QAAA,eAC9CnB,OAAA;YAAGkB,SAAS,EAAC;UAAa;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACrB,EAAA,CA5CID,WAAW;AAAA2B,EAAA,GAAX3B,WAAW;AA8CjB,eAAeA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}