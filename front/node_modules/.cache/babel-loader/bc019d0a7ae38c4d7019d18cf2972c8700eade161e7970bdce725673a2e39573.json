{"ast":null,"code":"var _jsxFileName = \"/home/benjamin/Documents/42/42_ft_transcendence/front/src/scenes/Tfa/TfaPage.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { ax } from '../../services/axios/axios';\nimport axios from 'axios';\nimport QRCode from 'qrcode.react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TfaPage = () => {\n  _s();\n  const [userInfos, setUserInfos] = useState(null); //creer une interface afin d'acceder a tout\n  const token = localStorage.getItem(\"token\");\n  const [qrCodeUrl, setQRCodeUrl] = useState('');\n  useEffect(() => {\n    const getUsers = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8080/users/me\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setUserInfos(response.data);\n      } catch (error) {\n        console.error(\"Failed to fetch users.\");\n      }\n    };\n    getUsers();\n  }, [token]);\n  const getCode = async () => {\n    try {\n      const response = await ax.post(\"http://localhost:8080/users/qrcode\", {\n        name: userInfos === null || userInfos === void 0 ? void 0 : userInfos.name\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(response.data);\n      // setQRCodeUrl(response.data);\n    } catch (e) {\n      console.log(\"could not get qrcode\");\n    }\n  };\n  const QRCodeComponent = _ref => {\n    let {\n      qrCodeUrl\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(QRCode, {\n      value: qrCodeUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 10\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 3\n  }, this);\n};\n_s(TfaPage, \"cwOEni2Pfea+cfdeBb2e0yrC1Xs=\");\n_c = TfaPage;\nexport default TfaPage;\nvar _c;\n$RefreshReg$(_c, \"TfaPage\");","map":{"version":3,"names":["useEffect","useState","ax","axios","QRCode","jsxDEV","_jsxDEV","TfaPage","_s","userInfos","setUserInfos","token","localStorage","getItem","qrCodeUrl","setQRCodeUrl","getUsers","response","get","headers","Authorization","data","error","console","getCode","post","name","log","e","QRCodeComponent","_ref","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/benjamin/Documents/42/42_ft_transcendence/front/src/scenes/Tfa/TfaPage.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { ax } from '../../services/axios/axios'\nimport { UserInfos } from '../../services/interfaces/userInfos.interface';\nimport axios from 'axios';\nimport QRCode from 'qrcode.react';\nimport { GoogleLogin } from 'react-google-login';\n\nconst TfaPage = () => {\n\n\tconst [userInfos, setUserInfos] = useState<UserInfos | null>(null); //creer une interface afin d'acceder a tout\n\tconst token = localStorage.getItem(\"token\");\n\tconst [qrCodeUrl, setQRCodeUrl] = useState('');\n\n\tuseEffect(() => {\n\t\tconst getUsers = async () => {\n\t\t\ttry {\n\t\t\t\tconst response = await axios.get(\"http://localhost:8080/users/me\", {\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\tsetUserInfos(response.data);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(\"Failed to fetch users.\");\n\t\t\t}\n\t\t};\n\t\tgetUsers();\n\t}, [token]);\n\n\tconst getCode = async () => {\n\t\ttry {\n\t\t\tconst response = await ax.post(\"http://localhost:8080/users/qrcode\",\n\t\t\t\t{ name: userInfos?.name }, {\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t\t},\n\t\t\t}\n\t\t\t);\n\t\t\tconsole.log(response.data);\n\t\t\t// setQRCodeUrl(response.data);\n\t\t}\n\t\tcatch (e) {\n\t\t\tconsole.log(\"could not get qrcode\");\n\t\t}\n\t}\n\n\tconst QRCodeComponent = ({ qrCodeUrl }: any) => {\n\t\treturn <QRCode value={qrCodeUrl} />;\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t{/* <button onClick={getCode}>Get qr code</button> */}\n\t\t\t{/* {qrCodeUrl && <QRCodeComponent qrCodeUrl={qrCodeUrl} />} */}\n\t\t\t{/* <GoogleLogin\n\t\t\t\tclientId=\"YOUR_CLIENT_ID\"\n\t\t\t\tbuttonText=\"Enable 2FA\"\n\t\t\t\tonSuccess={getCode}\n\t\t\t\tonFailure={getCode}\n\t\t\t\tcookiePolicy={'single_host_origin'}\n\t\t\t\tresponseType=\"code\"\n\t\t\t/> */}\n\t\t</div>\n\t);\n};\n\nexport default TfaPage;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,EAAE,QAAQ,4BAA4B;AAE/C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAErB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAmB,IAAI,CAAC,CAAC,CAAC;EACpE,MAAMU,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACf,MAAMgB,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACH,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,gCAAgC,EAAE;UAClEC,OAAO,EAAE;YACRC,aAAa,EAAG,UAAST,KAAM;UAChC;QACD,CAAC,CAAC;QACFD,YAAY,CAACO,QAAQ,CAACI,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACfC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAC;MACxC;IACD,CAAC;IACDN,QAAQ,CAAC,CAAC;EACX,CAAC,EAAE,CAACL,KAAK,CAAC,CAAC;EAEX,MAAMa,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACH,MAAMP,QAAQ,GAAG,MAAMf,EAAE,CAACuB,IAAI,CAAC,oCAAoC,EAClE;QAAEC,IAAI,EAAEjB,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEiB;MAAK,CAAC,EAAE;QAC3BP,OAAO,EAAE;UACRC,aAAa,EAAG,UAAST,KAAM;QAChC;MACD,CACA,CAAC;MACDY,OAAO,CAACI,GAAG,CAACV,QAAQ,CAACI,IAAI,CAAC;MAC1B;IACD,CAAC,CACD,OAAOO,CAAC,EAAE;MACTL,OAAO,CAACI,GAAG,CAAC,sBAAsB,CAAC;IACpC;EACD,CAAC;EAED,MAAME,eAAe,GAAGC,IAAA,IAAwB;IAAA,IAAvB;MAAEhB;IAAe,CAAC,GAAAgB,IAAA;IAC1C,oBAAOxB,OAAA,CAACF,MAAM;MAAC2B,KAAK,EAAEjB;IAAU;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpC,CAAC;EAED,oBACC7B,OAAA;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAWK,CAAC;AAER,CAAC;AAAC3B,EAAA,CAzDID,OAAO;AAAA6B,EAAA,GAAP7B,OAAO;AA2Db,eAAeA,OAAO;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}